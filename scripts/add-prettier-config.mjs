// scripts/add-prettier-config.js
import fs from 'fs-extra'
import { glob } from 'glob'
import path from 'path'

// N·ªôi dung cho file .prettierrc.js
const prettierConfigContent = `// .prettierrc.js
module.exports = require('@social-blog/prettier-config');
`

// Ki·ªÉm tra xem th∆∞ m·ª•c g·ªëc c√≥ package.json kh√¥ng
function isProjectDir(dirPath) {
  return fs.existsSync(path.join(dirPath, 'package.json'))
}

// Th√™m c·∫•u h√¨nh Prettier v√†o m·ªôt th∆∞ m·ª•c
function addPrettierConfig(dir) {
  const prettierJsPath = path.join(dir, '.prettierrc.js')
  const prettierJsonPath = path.join(dir, '.prettierrc')
  const prettierJsoncPath = path.join(dir, '.prettierrc.json')

  // Ki·ªÉm tra xem ƒë√£ c√≥ file c·∫•u h√¨nh Prettier n√†o ch∆∞a
  if (fs.existsSync(prettierJsPath) || fs.existsSync(prettierJsonPath) || fs.existsSync(prettierJsoncPath)) {
    console.log(`C·∫•u h√¨nh Prettier ƒë√£ t·ªìn t·∫°i trong: ${dir}`)

    // C·∫≠p nh·∫≠t file c·∫•u h√¨nh n·∫øu ƒë√£ t·ªìn t·∫°i
    if (fs.existsSync(prettierJsPath)) {
      fs.writeFileSync(prettierJsPath, prettierConfigContent)
      console.log(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t: ${prettierJsPath}`)
    }
  } else {
    // T·∫°o file .prettierrc.js m·ªõi
    fs.writeFileSync(prettierJsPath, prettierConfigContent)
    console.log(`‚úÖ ƒê√£ t·∫°o m·ªõi: ${prettierJsPath}`)
  }
}

// H√†m ch√≠nh ƒë·ªÉ th√™m c·∫•u h√¨nh Prettier v√†o t·∫•t c·∫£ c√°c packages v√† apps
function addPrettierConfigToAllProjects() {
  const rootDir = process.cwd()
  console.log(`üîç ƒêang t√¨m packages v√† apps trong: ${rootDir}`)

  // T√¨m t·∫•t c·∫£ c√°c th∆∞ m·ª•c packages
  const packagesPattern = path.join(rootDir, 'packages', '*')
  const uiPackagesPattern = path.join(rootDir, 'packages', 'ui', '*')

  // T√¨m t·∫•t c·∫£ c√°c th∆∞ m·ª•c apps
  const appsPattern = path.join(rootDir, 'apps', '*')

  // T√¨m t·∫•t c·∫£ c√°c th∆∞ m·ª•c d·ª±a tr√™n patterns
  const packages = glob.sync(packagesPattern)
  const uiPackages = glob.sync(uiPackagesPattern)
  const apps = glob.sync(appsPattern)

  // K·∫øt h·ª£p t·∫•t c·∫£ c√°c th∆∞ m·ª•c ƒë·ªÉ x·ª≠ l√Ω
  const allDirectories = [...packages, ...uiPackages, ...apps]

  // Th√™m c·∫•u h√¨nh Prettier v√†o m·ªói th∆∞ m·ª•c project
  console.log('üìù ƒêang th√™m c·∫•u h√¨nh Prettier...')

  // Th√™m c·∫•u h√¨nh cho th∆∞ m·ª•c g·ªëc
  addPrettierConfig(rootDir)

  // ƒê·∫øm s·ªë l∆∞·ª£ng th∆∞ m·ª•c ƒë√£ x·ª≠ l√Ω
  let processedCount = 1 // ƒê√£ t√≠nh th∆∞ m·ª•c g·ªëc

  // Th√™m c·∫•u h√¨nh cho c√°c th∆∞ m·ª•c con
  allDirectories.forEach(dir => {
    if (isProjectDir(dir)) {
      addPrettierConfig(dir)
      processedCount++
    }
  })

  console.log(`\n‚ú® Ho√†n th√†nh! ƒê√£ th√™m/c·∫≠p nh·∫≠t c·∫•u h√¨nh Prettier cho ${processedCount} th∆∞ m·ª•c.`)
}

// Ch·∫°y h√†m ch√≠nh
addPrettierConfigToAllProjects()